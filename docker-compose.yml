services:
  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "3000:3000"
    depends_on:
      - user
      - cart
      - order
    networks:
      - mynetwork

  user:
    build:
      context: ./user
    ports:
      - "3001:3001"
    environment:
      - MONGO_URL=mongodb://mongo:27017/users-db
      - RABBITMQ_URL=amqp://rabbitmq
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - mynetwork

  cart:
    build:
      context: ./cart
    ports:
      - "3002:3002"
    environment:
      - MONGO_URL=mongodb://mongo:27017/cart-db
      - RABBITMQ_URL=amqp://rabbitmq
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - mynetwork

  order:
    build:
      context: ./order
    ports:
      - "3003:3003"
    environment:
      - MONGO_URL=mongodb://mongo:27017/orders-db
      - RABBITMQ_URL=amqp://rabbitmq
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - mynetwork

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - mynetwork
    volumes:
      - mongo-data:/data/db

  rabbitmq:
    image: rabbitmq:4
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - mynetwork
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 6

networks:
  mynetwork:
    driver: bridge

volumes:
  mongo-data:
